📂 modecode
├── 📂 modules
│   ├── 📂 ad_groups
│   │   ├── 📝 main.tf
│   │   ├── 📝 variables.tf
│   ├── 📂 role_assignment
│   │   ├── 📝 main.tf
│   │   ├── 📝 variables.tf
├── 📝 .gitignore
├── 📝 access_management.tf
├── 📝 key_vault.tf
├── 📝 provider.tf
├── 📝 resource_group.tf
├── 📝 variables.tf          # Define all input variables here
├── 📝 dev.tfvars            # Provide variable values for the "dev" environment
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\modules\ad_groups\main.tf
resource "azuread_group" "platform20_assist_ad_groups" {
  display_name    = var.display_name
  security_enabled = true
}

output "object_id" {
  value = azuread_group.platform20_assist_ad_groups.object_id
}
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\modules\ad_groups\variables.tf
variable "display_name" {
  description = "The Display name of the Azure AD Group"
  type        = string
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\modules\role_assignment\local.tf
locals {
  #Location
  location = "East US"

  # Define the AD groups for each environment
  ad_groups = {
    # "prod" = {
    #   "prod_devops"    = "platform20 Assist Prod DevOps"
    #   "prod_developer" = "platform20 Assist Prod Developer"
    #   "prod_support"   = "platform20 Assist Prod Support"
    #   "prod_manager"   = "platform20 Assist Prod Manager"
    # },
    # "preprod" = {
    #   "preprod_devops"     = "platform20 Assist Preprod DevOps"
    #   "preprod_developer"  = "platform20 Assist Preprod Developers"
    #   "preprod_manager"    = "platform20 Assist Preprod Manager"
    # },
      "dev" = {
      "dev_devops"     = "platform20 Assist Dev DevOps"
      "dev_developer"  = "platform20 Assist Dev Developer"
      "dev_manager"    = "platform20 Assist Dev Manager"
    }
  }

  # Define role assignments for each environment
  role_assignments = {
    # "prod" = {
    #   "prod_devops"     = { role = ["Contributor"] },
    #   "prod_developer"  = { role = ["Reader"] },
    #   "prod_support"    = { role = ["Reader"] },
    #   "prod_manager"    = { role = ["Reader"] }
    # },
    # "preprod" = {
    #   "preprod_devops"      = { role = ["Contributor"] },
    #   "preprod_developer"   = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] },
    #   "preprod_manager"     = { role = ["Reader"] }
    # },
    "dev" = {
      "dev_devops"      = { role = ["Contributor"] },
      "dev_developer"   = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] },
      "dev_manager"     = { role = ["Reader"] }
    }
  }
}
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\modules\role_assignment\main.tf
resource "azurerm_role_assignment" "role_assignment" {
  for_each = toset(flatten([for role in var.role_definition_name : role]))
  principal_id        = var.principal_id
  role_definition_name = each.value
  scope                = var.scope
}
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\modules\role_assignment\variables.tf
variable "principal_id" {
  description = "The ID of the principal (Azure AD group or user)"
  type        = string
}

variable "role_definition_name" {
  description = "The role definition name (e.g., Owner, Contributor, Reader)"
  type        = list(string)
}

variable "scope" {
  description = "The scope of the role assignment (e.g., resource group ID)"
  type        = string
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\access_management.tf
module "azuread_groups" {
  for_each     = var.ad_groups[terraform.workspace]
  source       = "./modules/ad_groups"
  display_name = each.value
}

# Assign roles to Azure AD groups
module "role_assignment" {
  for_each             = var.role_assignments[terraform.workspace]
  source               = "./modules/role_assignment"
  principal_id         = module.azuread_groups[each.key].object_id
  role_definition_name = flatten([for role in each.value["role"] : role])
  scope                = azurerm_resource_group.platform20_assist_resource_group.id
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\dev.tfvars
subscription_id     = "ff65f0cf-a249-47f9-966a-01344e9444f1"
tenant_id           = "023e4694-6942-45bb-902d-48f105a22723"
location            = "westus2"
environment         = "dev"
resource_group_name = "platform20-assist-dev"
key_vault_name      = "dev-plat-assist-kv"
tags = {
  environment = "dev"
  owner       = "platform20-assist"
}
ad_groups = {
  "dev" = {
    "dev_devops"    = "platform20 Assist Dev DevOps"
    "dev_developer" = "platform20 Assist Dev Developer"
    "dev_manager"   = "platform20 Assist Dev Manager"
  }
}

role_assignments = {
  "dev" = {
    "dev_devops"    = { role = ["Contributor"] }
    "dev_developer" = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] }
    "dev_manager"   = { role = ["Reader"] }
  }
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\key_vault.tf
// To get the current tenant data's
data "azurerm_client_config" "current" {}

// Create the Azure Key Vault to store the key and secrets
resource "azurerm_key_vault" "key_vault" {
  name                       = var.key_vault_name
  location                   = azurerm_resource_group.platform20_assist_resource_group.location
  resource_group_name        = azurerm_resource_group.platform20_assist_resource_group.name
  sku_name                   = "standard"
  tenant_id                  = data.azurerm_client_config.current.tenant_id
  soft_delete_retention_days = 7
  purge_protection_enabled   = false
  tags                       = var.tags
}

// Access policy for Azure Key Vault
resource "azurerm_key_vault_access_policy" "key_vault_policy" {
  key_vault_id       = azurerm_key_vault.key_vault.id
  tenant_id          = data.azurerm_client_config.current.tenant_id
  object_id          = data.azurerm_client_config.current.object_id // Use the current user/service principal
  # object_id          = azurerm_linux_virtual_machine.virtual_machine.identity[0].principal_id
  key_permissions    = ["Get", "List", "Decrypt", "Encrypt"]
  secret_permissions = ["Get", "List"]
  depends_on = [
    azurerm_key_vault.key_vault,
    # azurerm_linux_virtual_machine.virtual_machine
  ]
}

// Output for Key Vault URI
output "key_vault_uri" {
  value = azurerm_key_vault.key_vault.vault_uri
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\variables.tf
variable "subscription_id" {
  type        = string
  description = "The Azure subscription ID"
}

variable "tenant_id" {
  type        = string
  description = "The Azure tenant ID"
}

variable "location" {
  type        = string
  description = "The Azure region to deploy resources"
  default     = "East US"
}

variable "environment" {
  type        = string
  description = "The environment name (e.g., dev, preprod, prod)"
}

variable "resource_group_name" {
  type        = string
  description = "The name of the resource group"
}

variable "key_vault_name" {
  type        = string
  description = "The name of the Key Vault"
}

variable "tags" {
  type        = map(string)
  description = "Tags to apply to resources"
  default = {
    owner       = "platform20-assist"
    environment = "dev" # Default value, can be overridden
  }
}

# AD Groups
variable "ad_groups" {
  type        = map(map(string))
  description = "Azure AD groups for each environment"
  default = {
    "dev" = {
      "dev_devops"    = "platform20 Assist Dev DevOps"
      "dev_developer" = "platform20 Assist Dev Developer"
      "dev_manager"   = "platform20 Assist Dev Manager"
    }
    # Uncomment for other environments
    # "prod" = {
    #   "prod_devops"    = "platform20 Assist Prod DevOps"
    #   "prod_developer" = "platform20 Assist Prod Developer"
    #   "prod_support"   = "platform20 Assist Prod Support"
    #   "prod_manager"   = "platform20 Assist Prod Manager"
    # },
    # "preprod" = {
    #   "preprod_devops"     = "platform20 Assist Preprod DevOps"
    #   "preprod_developer"  = "platform20 Assist Preprod Developers"
    #   "preprod_manager"    = "platform20 Assist Preprod Manager"
    # }
  }
}

# Role Assignments
variable "role_assignments" {
  type        = map(map(map(list(string))))
  description = "Role assignments for each environment"
  default = {
    "dev" = {
      "dev_devops"    = { role = ["Contributor"] }
      "dev_developer" = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] }
      "dev_manager"   = { role = ["Reader"] }
    }
    # Uncomment for other environments
    # "prod" = {
    #   "prod_devops"     = { role = ["Contributor"] },
    #   "prod_developer"  = { role = ["Reader"] },
    #   "prod_support"    = { role = ["Reader"] },
    #   "prod_manager"    = { role = ["Reader"] }
    # },
    # "preprod" = {
    #   "preprod_devops"      = { role = ["Contributor"] },
    #   "preprod_developer"   = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] },
    #   "preprod_manager"     = { role = ["Reader"] }
    # }
  }
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\provider.tf
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 4.0"
    }
  }
}

provider "azurerm" {
  features {}
  subscription_id = var.subscription_id
  tenant_id       = var.tenant_id
}

terraform {
  backend "azurerm" {
    resource_group_name  = "platform20-assist-terraform"
    storage_account_name = "platform20terraformhub"
    container_name       = "terraformstate"
    key                  = "terraform.tfstate"
  }
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\resource_group.tf
resource "azurerm_resource_group" "platform20_assist_resource_group" {
  name     = "var.resource_group_name-${terraform.workspace}"
  location = var.location
  tags     = var.tags
}

output "resource_group_name" {
  value = azurerm_resource_group.platform20_assist_resource_group.name
}

output "resource_group_location" {
  value = azurerm_resource_group.platform20_assist_resource_group.location
}
-------------------------------------------------------------------------------------------
D:\Professional_hubino\Az_Certainai\Prelim\platform20code\variables.tf
variable "subscription_id" {
  type        = string
  description = "The Azure subscription ID"
}

variable "tenant_id" {
  type        = string
  description = "The Azure tenant ID"
}

variable "location" {
  type        = string
  description = "The Azure region to deploy resources"
  default     = "East US"
}

variable "environment" {
  type        = string
  description = "The environment name (e.g., dev, preprod, prod)"
}

variable "resource_group_name" {
  type        = string
  description = "The name of the resource group"
}

variable "key_vault_name" {
  type        = string
  description = "The name of the Key Vault"
}

variable "tags" {
  type        = map(string)
  description = "Tags to apply to resources"
  default = {
    owner       = "platform20-assist"
    environment = "dev" # Default value, can be overridden
  }
}

# AD Groups
variable "ad_groups" {
  type        = map(map(string))
  description = "Azure AD groups for each environment"
  default = {
    "dev" = {
      "dev_devops"    = "platform20 Assist Dev DevOps"
      "dev_developer" = "platform20 Assist Dev Developer"
      "dev_manager"   = "platform20 Assist Dev Manager"
    }
    # Uncomment for other environments
    # "prod" = {
    #   "prod_devops"    = "platform20 Assist Prod DevOps"
    #   "prod_developer" = "platform20 Assist Prod Developer"
    #   "prod_support"   = "platform20 Assist Prod Support"
    #   "prod_manager"   = "platform20 Assist Prod Manager"
    # },
    # "preprod" = {
    #   "preprod_devops"     = "platform20 Assist Preprod DevOps"
    #   "preprod_developer"  = "platform20 Assist Preprod Developers"
    #   "preprod_manager"    = "platform20 Assist Preprod Manager"
    # }
  }
}

# Role Assignments
variable "role_assignments" {
  type        = map(map(map(list(string))))
  description = "Role assignments for each environment"
  default = {
    "dev" = {
      "dev_devops"    = { role = ["Contributor"] }
      "dev_developer" = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] }
      "dev_manager"   = { role = ["Reader"] }
    }
    # Uncomment for other environments
    # "prod" = {
    #   "prod_devops"     = { role = ["Contributor"] },
    #   "prod_developer"  = { role = ["Reader"] },
    #   "prod_support"    = { role = ["Reader"] },
    #   "prod_manager"    = { role = ["Reader"] }
    # },
    # "preprod" = {
    #   "preprod_devops"      = { role = ["Contributor"] },
    #   "preprod_developer"   = { role = ["Reader", "AcrPull", "AcrPush", "Virtual Machine Administrator Login"] },
    #   "preprod_manager"     = { role = ["Reader"] }
    # }
  }
}
-------------------------------------------------------------------------------------------
data.azurerm_client_config.current
azurerm_key_vault.key_vault
azurerm_key_vault_access_policy.key_vault_policy
azurerm_resource_group.platform20_assist_resource_group
module.azuread_groups["dev_developer"].azuread_group.platform20_assist_ad_groups
module.azuread_groups["dev_devops"].azuread_group.platform20_assist_ad_groups
module.azuread_groups["dev_manager"].azuread_group.platform20_assist_ad_groups
module.role_assignment["dev_developer"].azurerm_role_assignment.role_assignment["AcrPull"]
module.role_assignment["dev_developer"].azurerm_role_assignment.role_assignment["AcrPush"]
module.role_assignment["dev_developer"].azurerm_role_assignment.role_assignment["Reader"]
module.role_assignment["dev_developer"].azurerm_role_assignment.role_assignment["Virtual Machine Administrator Login"]
module.role_assignment["dev_devops"].azurerm_role_assignment.role_assignment["Contributor"]
module.role_assignment["dev_manager"].azurerm_role_assignment.role_assignment["Reader"]
